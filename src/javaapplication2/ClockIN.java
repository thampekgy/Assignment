/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ckk
 */
public class ClockIN extends javax.swing.JFrame {

    Connection con;
    PreparedStatement pstmt;
    ResultSet rs;
    /**
     * Creates new form ClockIN
     */
    public ClockIN() {
        initComponents();
        try {
            String host = "jdbc:derby://localhost:1527/FastestDeliveryman";
            String username = "nbuser";
            String password = "nbuser";
            con = DriverManager.getConnection(host, username, password);
        } catch (SQLException ex) {
            Logger.getLogger(javaapplication2.ClockIN.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Clock In");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clock Out");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Employee ID : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(72, 72, 72)
                        .addComponent(jButton2)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(139, 139, 139))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            GregorianCalendar cal = new GregorianCalendar();
            //check if there exists a record which clockout is null
            //clock out is null means the employee has not clock out yet
            pstmt = con.prepareStatement("select * from ClockIn where D_id=? and C_date=? and clockOut is null");
            pstmt.setString(1, jTextField1.getText());
            pstmt.setString(2, cal.get(GregorianCalendar.MONTH) + 1 + "/" + cal.get(GregorianCalendar.DATE) + "/" + cal.get(GregorianCalendar.YEAR));
            rs = pstmt.executeQuery();
            if (rs.next()) {
                //if the record exists
                JOptionPane.showMessageDialog(null, "You need to clock out before you can clock in.");
            } else {
                pstmt = con.prepareStatement("insert into ClockIn(D_id,C_Date,ClockIn) values(?,?,?)");
                pstmt.setString(1, jTextField1.getText());
                pstmt.setString(2, cal.get(GregorianCalendar.MONTH) + 1 + "/" + cal.get(GregorianCalendar.DATE) + "/" + cal.get(GregorianCalendar.YEAR));
                pstmt.setString(3, cal.get(GregorianCalendar.HOUR_OF_DAY) + ":" + (cal.get(GregorianCalendar.MINUTE) < 10 ? "0" : "") + cal.get(GregorianCalendar.MINUTE));
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "You have successfully clock in.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(javaapplication2.ClockIN.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            GregorianCalendar cal = new GregorianCalendar();
            pstmt = con.prepareStatement("select * from ClockIn where D_id=? and C_date=? and ClockOut is null", ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            pstmt.setInt(1, 101);
            pstmt.setString(2, cal.get(GregorianCalendar.MONTH) + 1 + "/" + cal.get(GregorianCalendar.DATE) + "/" + cal.get(GregorianCalendar.YEAR));
            rs = pstmt.executeQuery();
            if (rs.next()) {
                rs.updateString("clockOut", cal.get(GregorianCalendar.HOUR_OF_DAY) + ":" + (cal.get(GregorianCalendar.MINUTE) < 10 ? "0" : "") + cal.get(GregorianCalendar.MINUTE) + ":00");
                rs.updateRow();
                JOptionPane.showMessageDialog(null, "You have successfully clock out.");
            } else {
                JOptionPane.showMessageDialog(null, "You need to clock in before you can clock out.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(javaapplication2.ClockIN.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClockIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClockIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClockIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClockIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClockIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
